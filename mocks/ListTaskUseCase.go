// Code generated by mockery v2.10.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	output "github.com/fgmaia/task/internal/usecases/ports/output"
)

// ListTaskUseCase is an autogenerated mock type for the ListTaskUseCase type
type ListTaskUseCase struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, userID
func (_m *ListTaskUseCase) Execute(ctx context.Context, userID string) (*output.ListTaskOutput, error) {
	ret := _m.Called(ctx, userID)

	var r0 *output.ListTaskOutput
	if rf, ok := ret.Get(0).(func(context.Context, string) *output.ListTaskOutput); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*output.ListTaskOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
