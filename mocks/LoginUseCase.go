// Code generated by mockery v2.10.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	output "github.com/fgmaia/task/internal/usecases/ports/output"
)

// LoginUseCase is an autogenerated mock type for the LoginUseCase type
type LoginUseCase struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, email, password
func (_m *LoginUseCase) Execute(ctx context.Context, email string, password string) (*output.LoginOutput, error) {
	ret := _m.Called(ctx, email, password)

	var r0 *output.LoginOutput
	if rf, ok := ret.Get(0).(func(context.Context, string, string) *output.LoginOutput); ok {
		r0 = rf(ctx, email, password)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*output.LoginOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, email, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
